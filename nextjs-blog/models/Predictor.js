const mongoose = require("mongoose");

const predictorSchema = new mongoose.Schema({
  User: { type: mongoose.Types.ObjectId, ref: "RUAPCollection" },
  FAVCyes: { type: Number },
  FAVCno: { type: Number },
  FCVCNever: { type: Number },
  FCVCSometimes: { type: Number },
  FCVCAlways: { type: Number },
  NCPBetween1y2: { type: Number },
  NCPThree: { type: Number },
  NCPMoreThanThree: { type: Number },
  CAECno: { type: Number },
  CAECSometimes: { type: Number },
  CAECFrequently: { type: Number },
  CAECAlways: { type: Number },
  SMOKEyes: { type: Number },
  SMOKEno: { type: Number },
  CH20LessThanALiter: { type: Number },
  CH20Between1and2L: { type: Number },
  CH20MoreThan2L: { type: Number },
  SCCyes: { type: Number },
  SCCno: { type: Number },
  FAFIDoNotHave: { type: Number },
  FAF1Or2Days: { type: Number },
  FAF2Or4Days: { type: Number },
  FAF4Or5days: { type: Number },
  TUE02Hours: { type: Number },
  TUE35Hours: { type: Number },
  TUEMoreThan5Hours: { type: Number },
  CALCIDoNotDrink: { type: Number },
  CALCSometimes: { type: Number },
  CALCFrequently: { type: Number },
  CALCAlways: { type: Number },
  MTRANSAutomobile: { type: Number },
  MTRANSMotorbike: { type: Number },
  MTRANSBike: { type: Number },
  MTRANSPublicTransportation: { type: Number },
  MTRANSWalking: { type: Number },
  NObeyesdadInsufficientWeight: { type: Number },
  NObeyesdadNormalWeight: { type: Number },
  NObeyesdadOverweightLevel1: { type: Number },
  NObeyesdadOverweightLevel2: { type: Number },
  NObeyesdadObesityType1: { type: Number },
  NObeyesdadObesityType2: { type: Number },
  NObeyesdadObesityType3: { type: Number },
});

module.exports = mongoose.model("Predictor", predictorSchema);
