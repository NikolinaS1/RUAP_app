<title>Obesity predictor</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link rel="icon" href="OP.png" />

<nav class="navbar navbar-expand-sm bg-primary navbar-dark">
    <div class="container-fluid">
        <img class="logo" src='logo.png' width="190px"></img>
        <ul class="navbar-nav">
            <li class="nav-item"><a class="nav-link active" href='/'>Home</a></li>
            <li class="nav-item"><a class ="nav-link" href='/predictor'>Predictor</a></li>
            <li class="nav-item">
                <form action="/logout?_method=DELETE" method="POST" class="logout">
                    <button class="btn btn-primary" type="submit">Log Out</button>
                </form>
            </li>
        </ul>
    </div>
</nav>
      
<div>
    <h2 class="text-center mb-4 mt-4 text-secondary">Statistics</h2>
    <div class="container text-center">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h3 class="ms-3 mb-3 mt-3">Graph1</h3>
                        <div style="width:500px; margin:0 auto;">
                            <canvas id="graph1"></canvas>
                        </div>
                        <script>
                            favc = {}
                            fcvc = {}
                            ncp = {}
                            caec = {}
                            smoke = {}
                            ch20 = {}
                            scc = {}
                            faf = {}
                            tue = {}
                            calc = {}
                            mtrans = {}
                            nobeyesdad = {}

                            for (odgovor in predictorCollection.findAll()) {
                                if (favc[odgovor.FAVC]) {
                                        favc[odgovor.FAVC] += 1;
                                } else {
                                        favc[odgovor.FAVC] = 1;
                                }
                                if (fcvc[odgovor.FCVC]) {
                                        fcvc[odgovor.FCVC] += 1;
                                } else {
                                        fcvc[odgovor.FCVC] = 1;
                                }
                                if (ncp[odgovor.NCP]) {
                                        ncp[odgovor.NCP] += 1;
                                } else {
                                        ncp[odgovor.NCP] = 1;
                                }
                                if (caec[odgovor.CAEC]) {
                                        caec[odgovor.CAEC] += 1;
                                } else {
                                        caec[odgovor.CAEC] = 1;
                                }
                                if (smoke[odgovor.SMOKE]) {
                                    smoke[odgovor.SMOKE] += 1;
                                } else {
                                    smoke[odgovor.SMOKE] = 1;
                                }

                                if (ch20[odgovor.CH20]) {
                                    ch20[odgovor.CH20] += 1;
                                } else {
                                    ch20[odgovor.CH20] = 1;
                                }
    
                                if (scc[odgovor.SCC]) {
                                    scc[odgovor.SCC] += 1;
                                } else {
                                    scc[odgovor.SCC] = 1;
                                }
  
                                if (faf[odgovor.FAF]) {
                                    faf[odgovor.FAF] += 1;
                                } else {
                                    faf[odgovor.FAF] = 1;
                                }
  
                                if (tue[odgovor.TUE]) {
                                    tue[odgovor.TUE] += 1;
                                } else {
                                    tue[odgovor.TUE] = 1;
                                }

                                if (calc[odgovor.CALC]) {
                                    calc[odgovor.CALC] += 1;
                                } else {
                                    calc[odgovor.CALC] = 1;
                                }
        
                                if (mtrans[odgovor.MTRANS]) {
                                    mtrans[odgovor.MTRANS] += 1;
                                } else {
                                    mtrans[odgovor.MTRANS] = 1;
                                }
      
                                if (nobeyesdad[odgovor.NObeyesdad]) {
                                    nobeyesdad[odgovor.NObeyesdad] += 1;
                                } else {
                                    nobeyesdad[odgovor.NObeyesdad] = 1;
                                }
                            }
                            // graf:
                            labelsFavc = []
                            labelsFavcData = []
                            for (i in favc) {
                                labelsFavc.append(i);
                                labelsFavcData.append(favc[i]);
                            }
                            labelsFcvc = []
                            labelsFcvcData = []
                            for (i in fcvc) {
                                labelsFcvc.append(i);
                                labelsFcvcData.append(fcvc[i]);
                            }
                            labelsNcp = []
                            labelsNcpData = []
                            for (i in ncp) {
                                labelsNcp.append(i);
                                labelsNcpData.append(ncp[i]);
                            }
                            labelsCaec = []
                            labelsCaecData = []
                            for (i in caec) {
                                labelsCaec.append(i);
                                labelsCaecData.append(caec[i]);
                            }
                            labelsSmoke = []
                            labelsSmokeData = []
                            for (i in smoke) {
                                labelsSmoke.append(i);
                                labelsSmokeData.append(smoke[i]);
                            }
                            labelsCh2o = []
                            labelsCh2oData = []
                            for (i in ch2o) {
                                labelsCh2o.append(i);
                                labelsCh2oData.append(ch2o[i]);
                            }
                            labelsScc = []
                            labelsSccData = []
                            for (i in scc) {
                                labelsScc.append(i);
                                labelsSccData.append(scc[i]);
                            }
                            labelsFaf = []
                            labelsFafData = []
                            for (i in faf) {
                                labelsFaf.append(i);
                                labelsFafData.append(faf[i]);
                            }
                            labelsTue = []
                            labelsTueData = []
                            for (i in tue) {
                                labelsTue.append(i);
                                labelsTueData.append(tue[i]);
                            }
                            labelsCalc = []
                            labelsCalcData = []
                            for (i in calc) {
                                labelsCalc.append(i);
                                labelsCalcData.append(calc[i]);
                            }
                            labelsMtrans = []
                            labelsMtransData = []
                            for (i in mtrans) {
                                labelsMtrans.append(i);
                                labelsMtransData.append(mtrans[i]);
                            }
                            labelsNobeyesdad = []
                            labelsNobeyesdadData = []
                            for (i in nobeyesdad) {
                                labelsNobeyesdad.append(i);
                                labelsNobeyesdadData.append(nobeyesdad[i]);
                            }

                        </script>
                        <script>
                            
                            const ctx1 = document.getElementById('graph1');
                            new Chart(ctx1, {
                              type: 'bar',
                              data: {
                                  labels: labelsFavc,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsFavcData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>

          <div class="col">
              <div class="card">
                  <div class="card-body">
                      <h3 class="ms-3 mb-3 mt-3">Graph2</h3>
                      <div style="width:500px; margin:0 auto;">
                          <canvas id="graph2"></canvas>
                      </div>

                      <script>
                          const ctx2 = document.getElementById('graph2');
                          new Chart(ctx2, {
                              type: 'bar',
                              data: {
                                  labels: labelsFcvc,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsFcvcData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>
      </div>
</div>

<div class="container text-center mt-4">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h3 class="ms-3 mb-3 mt-3">Graph3</h3>
                        <div style="width:500px; margin:0 auto;">
                            <canvas id="graph3"></canvas>
                        </div>
                        
                        <script>
                            const ctx3 = document.getElementById('graph3');
                            new Chart(ctx3, {
                              type: 'bar',
                              data: {
                                  labels: labelsNcp,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsNcpData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>

          <div class="col">
              <div class="card">
                  <div class="card-body">
                      <h3 class="ms-3 mb-3 mt-3">Graph4</h3>
                      <div style="width:500px; margin:0 auto;">
                          <canvas id="graph4"></canvas>
                      </div>

                      <script>
                          const ctx4 = document.getElementById('graph4');
                          new Chart(ctx4, {
                              type: 'bar',
                              data: {
                                  labels: labelsCaec,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsCaecData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>
      </div>
</div>

<div class="container text-center mt-4">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h3 class="ms-3 mb-3 mt-3">Graph5</h3>
                        <div style="width:500px; margin:0 auto;">
                            <canvas id="graph5"></canvas>
                        </div>
                        
                        <script>
                            const ctx5 = document.getElementById('graph5');
                            new Chart(ctx5, {
                              type: 'bar',
                              data: {
                                  labels: labelsSmoke,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsSmokeData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>

          <div class="col">
              <div class="card">
                  <div class="card-body">
                      <h3 class="ms-3 mb-3 mt-3">Graph6</h3>
                      <div style="width:500px; margin:0 auto;">
                          <canvas id="graph6"></canvas>
                      </div>

                      <script>
                          const ctx6 = document.getElementById('graph6');
                          new Chart(ctx6, {
                              type: 'bar',
                              data: {
                                  labels: labelsCh2o,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsCh2oData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>
      </div>
</div>

<div class="container text-center mt-4">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h3 class="ms-3 mb-3 mt-3">Graph7</h3>
                        <div style="width:500px; margin:0 auto;">
                            <canvas id="graph7"></canvas>
                        </div>
                        
                        <script>
                            const ctx7 = document.getElementById('graph7');
                            new Chart(ctx7, {
                              type: 'bar',
                              data: {
                                  labels: labelsScc,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsSccData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>

          <div class="col">
              <div class="card">
                  <div class="card-body">
                      <h3 class="ms-3 mb-3 mt-3">Graph8</h3>
                      <div style="width:500px; margin:0 auto;">
                          <canvas id="graph8"></canvas>
                      </div>

                      <script>
                          const ctx8 = document.getElementById('graph8');
                          new Chart(ctx8, {
                              type: 'bar',
                              data: {
                                  labels: labelsFaf,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsFafData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>
      </div>
</div>

<div class="container text-center mt-4">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h3 class="ms-3 mb-3 mt-3">Graph9</h3>
                        <div style="width:500px; margin:0 auto;">
                            <canvas id="graph9"></canvas>
                        </div>
                        
                        <script>
                            const ctx9 = document.getElementById('graph9');
                            new Chart(ctx9, {
                              type: 'bar',
                              data: {
                                  labels: labelsTue,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsTue,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>

          <div class="col">
              <div class="card">
                  <div class="card-body">
                      <h3 class="ms-3 mb-3 mt-3">Graph10</h3>
                      <div style="width:500px; margin:0 auto;">
                          <canvas id="graph10"></canvas>
                      </div>

                      <script>
                          const ctx10 = document.getElementById('graph10');
                          new Chart(ctx10, {
                              type: 'bar',
                              data: {
                                  labels: labelsCalc,
                                  datasets: [{
                                      label: '# of Votes',
                                      data: labelsCalcData,
                                      borderWidth: 1
                                  }]
                              },
                              options: {
                                  scales: {
                                      y: {
                                          beginAtZero: true
                                      }
                                  }
                              }
                          });
                      </script>
                  </div>
              </div>
          </div>
      </div>
</div>

<div class="container text-center mt-4 mb-4">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h3 class="ms-3 mb-3 mt-3">Graph11</h3>
                <div style="width:500px; margin:0 auto;">
                    <canvas id="graph11"></canvas>
                </div>
                        
                <script>
                    const ctx11 = document.getElementById('graph11');
                    new Chart(ctx11, {
                        type: 'bar',
                        data: {
                            labels: labelsMtrans,
                            datasets: [{
                                label: '# of Votes',
                                data: labelsMtransData,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                              y: {
                                  beginAtZero: true
                              }
                            }
                        }
                    });
                  </script>
          </div>
      </div>
  </div>  
</div>
<div class="container text-center mt-4 mb-4">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h3 class="ms-3 mb-3 mt-3">Graph11</h3>
                <div style="width:500px; margin:0 auto;">
                    <canvas id="graph11"></canvas>
                </div>
                        
                <script>
                    const ctx12 = document.getElementById('graph12');
                    new Chart(ctx11, {
                        type: 'bar',
                        data: {
                            labels: labelsNobeyesdad,
                            datasets: [{
                                label: '# of Votes',
                                data: labelsNobeyesdadData,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                              y: {
                                  beginAtZero: true
                              }
                            }
                        }
                    });
                  </script>
          </div>
      </div>
  </div>  
</div>